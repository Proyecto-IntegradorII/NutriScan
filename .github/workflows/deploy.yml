name: Cypress Tests on Pull Request

on: push

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14" # Especifica la versión de Node.js que necesitas

      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install

      - name: Run Cypress Tests
        uses: cypress-io/github-action@v2
        with:
          start: npm start # Comando para iniciar tu servidor, si es necesario
          wait-on: "http://localhost:3000" # Ajusta la URL según donde corra tu aplicación
          wait-on-timeout: 300 # Timeout en segundos para esperar que tu aplicación esté lista

# name: CI/CD Workflow

# on:
#   pull_request:
#     branches:
#       - development
#   push:
#     branches:
#       - main

# jobs:
#   # Workflow for merging to testing branch
#   merge-to-testing:
#     name: Merge to Testing
#     runs-on: ubuntu-latest
#     if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.ref == 'refs/heads/development'
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
#       - name: Merge to Testing branch
#         run: git merge --no-ff --no-commit development && git push origin testing

#   # Workflow for running tests
#   run-tests:
#     name: Run Tests
#     runs-on: ubuntu-latest
#     needs: merge-to-testing
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
#       - name: Install dependencies
#         run: npm install
#       - name: Run tests
#         run: npm test

#   # Workflow for deploying to production with Vercel
#   deploy-to-vercel-production:
#     name: Vercel Production Deployment
#     runs-on: ubuntu-latest
#     if: github.event_name == 'push' && github.ref == 'refs/heads/main'
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
#       - name: Install Vercel CLI
#         run: npm install --global vercel@latest
#       - name: Pull Vercel Environment Information
#         run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN_NUTRISCAN }}
#       - name: Build Project Artifacts
#         run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN_NUTRISCAN }}
#       - name: Deploy Project Artifacts to Vercel
#         run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN_NUTRISCAN }}
